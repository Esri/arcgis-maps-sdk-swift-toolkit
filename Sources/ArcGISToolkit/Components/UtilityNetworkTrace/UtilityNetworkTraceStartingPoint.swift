// Copyright 2022 Esri.

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import ArcGIS
import UIKit

/// A starting point of a utility network trace.
public struct UtilityNetworkTraceStartingPoint {
    /// The geo element to be used as a starting point.
    var geoElement: GeoElement
    
    /// The marker graphic added to the map view's graphics overlay.
    var graphic: Graphic?
    
    /// The ID of this starting point.
    let id = UUID()
    
    /// The symbol of the starting point as shown on the map.
    var image: UIImage?
    
    /// A point on the map indicated as the location of this starting point. This can be used to indicate a
    /// specific location along an edge element.
    var mapPoint: Point?
    
    /// The underlying utility element as generated by the utility network.
    var utilityElement: UtilityElement?
    
    /// A starting point of a utility network trace.
    /// - Parameters:
    ///   - geoElement: The geo element to be used as a starting point.
    ///   - mapPoint: A point on the map indicated as the location of this starting point.
    public init(geoElement: GeoElement, mapPoint: Point? = nil) {
        self.geoElement = geoElement
        self.mapPoint = mapPoint
    }
}

extension UtilityNetworkTraceStartingPoint: Hashable {
    public static func == (lhs: UtilityNetworkTraceStartingPoint, rhs: UtilityNetworkTraceStartingPoint) -> Bool {
        lhs.id == rhs.id
    }
    
    public func hash(into hasher: inout Hasher) {
        hasher.combine(id)
    }
}
