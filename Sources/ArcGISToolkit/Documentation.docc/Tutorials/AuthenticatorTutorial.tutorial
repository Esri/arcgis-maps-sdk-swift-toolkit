@Tutorial(time: 10) {
    @Intro(title: "Authenticator Tutorial") {
        The `Authenticator` is a configurable object that handles authentication challenges. It will
        display a user interface when network and ArcGIS authentication challenges occur.
        @Image(source: Authenticator, alt: "An image of the Authenticator component.")
    }
    
    @Section(title: "Using the Authenticator") {
        @ContentAndMedia {
            @Image(source: Authenticator, alt: "An image of the Authenticator component.")
        }
        
        @Steps {
            @Step {
                Declare and initialize an `Authenticator` member in your app.
                
                For OAuth implementations use `Authenticator(oAuthUserConfigurations:)`.
                @Code(name: "ExampleApp.swift", file: AuthenticatorStep1.swift)
            }
            
            @Step {
                Declare the app's body, placing the `Authenticator` into the hierarchy.
                @Code(name: "ExampleApp.swift", file: AuthenticatorStep2.swift)
            }
            
            @Step {
                Set the `Authenticator` to handle challenges.
                Set up credential persistence.
                @Code(name: "ExampleApp.swift", file: AuthenticatorStep3.swift)
            }
            
            @Step {
                During sign-out, use these `AuthenticationManager` methods.
                @Code(name: "SignOutView.swift", file: AuthenticatorStep4.swift)
            }
        }
    }
}
